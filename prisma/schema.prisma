generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DEV_DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  name     String
  email    String @unique
  password String
  tags     Tag[] 
}

model Tag {
  id       Int       @id @default(autoincrement())
  name     String
  color    String
  userId   Int
  user     User      @relation(fields: [userId], references: [id])
}


model Project {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  image       String
  springs     Spring[]
}

model Spring {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  startDate   DateTime
  endDate     DateTime
  state       String
  proyectId   Int
  proyect     Project  @relation(fields: [proyectId], references: [id])
  tasks       Task[]
}

model Task {
  id          Int        @id @default(autoincrement())
  name        String
  description String
  startDate   DateTime
  endDate     DateTime
  state       String
  springId    Int
  spring      Spring     @relation(fields: [springId], references: [id])
  board       Board?
  reminders   Reminder[]
}

model Reminder {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  startDate   DateTime
  endDate     DateTime
  state       String
  taskId      Int
  task       Task     @relation(fields: [taskId], references: [id])
}

model Board {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  startDate   DateTime
  endDate     DateTime
  state       String
  items       Item[]
  task       Task      @relation(fields: [taskId], references: [id])
  taskId      Int @unique
}

model Item {
  id         Int       @id @default(autoincrement())
  i          String
  x          Int
  y          Int
  w          Int
  h          Int
  board      Board     @relation(fields: [boardId], references: [id])
  boardId    Int      @unique
  imgId      Int?      @unique
  videoId    Int?      @unique
  audioId    Int?      @unique
  linkId     Int?      @unique
  link       Link?     @relation(fields: [linkId], references: [id])
  audio      Audio?    @relation(fields: [audioId], references: [id])
  video      Video?    @relation(fields: [videoId], references: [id])
  img        Img?      @relation(fields: [imgId], references: [id])
}



model Img {
  id          Int    @id @default(autoincrement())
  name        String
  description String
  url         String
  item        Item?
}

model Video {
  id          Int    @id @default(autoincrement())
  name        String
  description String
  url         String
  item        Item?
}

model Audio {
  id          Int    @id @default(autoincrement())
  name        String
  description String
  url         String
  item        Item?
}

model Link {
  id          Int    @id @default(autoincrement())
  name        String
  description String
  url         String
  item        Item?
}
